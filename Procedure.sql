

-------------------------PROCEDURE FOR INSERTING IN CUSTOMER TABLE-----------------------

CREATE OR REPLACE PROCEDURE INSERT_CUSTOMER( FNAME IN VARCHAR2, EMAIL IN VARCHAR2, PASS IN VARCHAR2, CONTACT IN VARCHAR2, PPATH IN VARCHAR2, DPATH IN VARCHAR2, DTYPE IN VARCHAR2, TOKCREATED IN VARCHAR2, TOKEXPIRY IN VARCHAR2, TOKEN IN VARCHAR2) IS
	CUS_ID NUMBER;
BEGIN

	INSERT INTO CUSTOMER(CUSTOMER_ID,CUSTOMER_NAME,PASSWORD,CUSTOMER_PHONE,PHOTO_PATH,EMAIL_ADDRESS) VALUES(CUSTOMER_INCREMENT.NEXTVAL,FNAME,PASS,CONTACT,PPATH,EMAIL);

	SELECT CUSTOMER_ID INTO CUS_ID FROM CUSTOMER WHERE EMAIL_ADDRESS=EMAIL;

	INSERT INTO CUSTOMER_EMAIL_VERIFICATION(CUSTOMER_ID, IS_VERIFIED, EMAIL_ADDRESS, TOKEN_CREATED, TOKEN_EXPIRY, TOKEN_VALUE) VALUES(CUS_ID,0,EMAIL,TOKCREATED,TOKEXPIRY,TOKEN);

	INSERT INTO DOCUMENT(CUSTOMER_ID,TYPE_NAME,FILE_PATH) VALUES(CUS_ID,DTYPE,DPATH);

EXCEPTION
	WHEN NO_DATA_FOUND THEN
		DBMS_OUTPUT.PUT_LINE('NO DATA');
	WHEN OTHERS THEN
		DBMS_OUTPUT.PUT_LINE('DO NOT KNOW');
END;
/

---------------------------------PROCEDURE FOR INSERTING IN OWNER TABLE----------------------------

CREATE OR REPLACE PROCEDURE INSERT_OWNER(FNAME IN VARCHAR2, EMAIL IN VARCHAR2, PASS IN VARCHAR2, CONTACT IN VARCHAR2, PPATH IN VARCHAR2, LONGT IN VARCHAR2, LAT IN VARCHAR2, TOKCREATED IN VARCHAR2, TOKEXPIRY IN VARCHAR2, TOKEN IN VARCHAR2) IS
	OWN_ID NUMBER;
BEGIN

	INSERT INTO OWNER(OWNER_ID,OWNER_NAME,PASSWORD,OWNER_PHONE,LONGTITUDE,LATITUDE,PHOTO_PATH,EMAIL_ADDRESS) VALUES(OWNER_INCREMENT.NEXTVAL, FNAME, PASS, CONTACT, LONGT, LAT, PPATH, EMAIL);

	SELECT OWNER_ID INTO OWN_ID FROM OWNER WHERE EMAIL_ADDRESS=EMAIL;

	INSERT INTO OWNER_EMAIL_VERIFICATION(OWNER_ID, IS_VERIFIED, EMAIL_ADDRESS, TOKEN_CREATED, TOKEN_EXPIRY, TOKEN_VALUE) VALUES(OWN_ID, 0, EMAIL, TOKCREATED, TOKEXPIRY, TOKEN);

EXCEPTION
	WHEN NO_DATA_FOUND THEN
		DBMS_OUTPUT.PUT_LINE('NO DATA');
	WHEN OTHERS THEN
		DBMS_OUTPUT.PUT_LINE('DO NOT KNOW');
END;
/

---------------------------------PROCEDURE FOR INSERTING IN PEER_REVIEW AND CYCLE_REVIEW TABLE AND FOR UPDATING TRIP_DETAILS TABLE (STATUS=REVIEWED)-----------------------------

CREATE OR REPLACE PROCEDURE REVIEW_INSERT( CYC_RAT IN NUMBER, CYC_COMMENT IN VARCHAR2, OWN_RAT IN NUMBER, OWN_COMMENT IN VARCHAR2, TRP_ID IN NUMBER )IS

	CYC_ID NUMBER;
	CUS_ID NUMBER;
	OWN_ID NUMBER;
BEGIN

	SELECT R.CYCLE_ID, R.CUSTOMER_ID, C.OWNER_ID INTO CYC_ID, CUS_ID, OWN_ID FROM RESERVES R, CYCLE C WHERE R.TRIP_ID = TRP_ID AND R.CYCLE_ID = C.CYCLE_ID;

	INSERT INTO CYCLE_REVIEW(REVIEW_ID,RATING,CUSTOMER_ID,CYCLE_ID,COMMENT_TEXT) VALUES(CYCLE_REVIEW_INCREMENT.NEXTVAL,CYC_RAT,CUS_ID,CYC_ID,CYC_COMMENT);

	INSERT INTO PEER_REVIEW(REVIEW_ID,RATING,CUSTOMER_ID,OWNER_ID,COMMENT_TEXT) VALUES(PEER_REVIEW_INCREMENT.NEXTVAL,OWN_RAT,CUS_ID,OWN_ID,OWN_COMMENT);

    --------- 4 denotes that the customer has given reviews ------------
	UPDATE TRIP_DETAILS SET STATUS= 4 WHERE TRIP_ID=TRP_ID;


EXCEPTION
	WHEN NO_DATA_FOUND THEN
		DBMS_OUTPUT.PUT_LINE('NO DATA');
	WHEN OTHERS THEN
		DBMS_OUTPUT.PUT_LINE('DO NOT KNOW');
END;
/
